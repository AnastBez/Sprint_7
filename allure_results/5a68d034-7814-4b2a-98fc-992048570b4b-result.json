{"name": "test_response[dybmyttqol-drvbtfoomh-hgqgxldimf]", "status": "broken", "statusDetails": {"message": "ValueError: Invalid format specifier", "trace": "self = <allure_pytest.listener.AllureListener object at 0x7fdd90bdad50>, item = <Function test_response[dybmyttqol-drvbtfoomh-hgqgxldimf]>\n\n    @pytest.hookimpl(hookwrapper=True)\n    def pytest_runtest_setup(self, item):\n        if not self._cache.get(item.nodeid):\n            uuid = self._cache.push(item.nodeid)\n            test_result = TestResult(name=item.name, uuid=uuid, start=now(), stop=now())\n            self.allure_logger.schedule_test(uuid, test_result)\n        yield\n        self._update_fixtures_children(item)\n        uuid = self._cache.get(item.nodeid)\n        test_result = self.allure_logger.get_test(uuid)\n        params = self.__get_pytest_params(item)\n        param_id = self.__get_pytest_param_id(item)\n>       test_result.name = allure_name(item, params, param_id)\n\nvenv/lib/python3.7/site-packages/allure_pytest/listener.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.7/site-packages/allure_pytest/utils.py:125: in allure_name\n    ) if title else name\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/string.py:186: in format\n    return self.vformat(format_string, args, kwargs)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/string.py:190: in vformat\n    result, _ = self._vformat(format_string, args, kwargs, used_args, 2)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/string.py:243: in _vformat\n    result.append(self.format_field(obj, format_spec))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <allure_commons.utils.SafeFormatter object at 0x7fdda16c0b10>, value = '{\"ok\"}', format_spec = 'true'\n\n    def format_field(self, value, format_spec):\n>       return format(value, format_spec)\nE       ValueError: Invalid format specifier\n\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/string.py:260: ValueError"}, "start": 1733577387294, "stop": 1733577387294, "uuid": "4c75e487-52e9-418d-8906-f90ef4bc5c40", "historyId": "6adf97f83acf6453d4a6a4b1070f3754", "labels": [{"name": "parentSuite", "value": "tests.courier"}, {"name": "suite", "value": "test_create_courier"}, {"name": "subSuite", "value": "TestCreateCourier"}, {"name": "host", "value": "192.168.1.4.non-exists.ptr.local"}, {"name": "thread", "value": "75210-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.courier.test_create_courier"}]}